---

- name: Check if sshd_config was modified
  command: egrep -i ^Subsystem[[:space:]]*sftp[[:space:]]*internal-sftp /etc/ssh/sshd_config
  failed_when: false
  register: check_sftp

- name: Configure sshd_config
  include: sftpgroup.yml
  when: check_sftp|failed

- name: Check sftp group
  shell: egrep -io ^[[:space:]]*Match[[:space:]]*group[[:space:]][[:alnum:]]* /etc/ssh/sshd_config | awk '{print $NF}'
  register: sftpgroup

- name: Set sftp_group
  set_fact:
    sftp_group: "{{ sftpgroup.stdout }}"

- name: Check if user exists
  shell: getent passwd "{{ sftp_user }}" | wc -l | tr -d ''
  register: user_exist

- name: Check if home users exists
  stat: path="/home/chroot/"{{ sftp_user }}
  register: home_check

- name: Change home ownership
  command: "{{ item }}"
  with_items:
    - mkdir -p /home/chroot/{{ sftp_user }}
    - chmod 755 /home/chroot
    - chown root.root /home/chroot/{{ sftp_user }}
    - chmod 755 /home/chroot/{{ sftp_user }}
  when: home_check.stat.exists == False

- name: Create sftp user
  user:
    name: "{{ sftp_user }}"
    createhome: no
    home: "/home/chroot/{{ sftp_user }}"
    append: yes
    shell: /bin/false
    groups: "{{ sftp_group }}"
    state: present
  register: user_created
  when: user_exist.stdout == "0"

- name: Create password for {{ sftp_user }}
  user:
    name: "{{ sftp_user }}"
    password: "{{ lookup('password', 'credentials/' + inventory_hostname + '/' + sftp_user + '/password.txt encrypt=md5_crypt length=14') }}"
  register: password_created
  when: user_created|changed

- name: Add sftp bind mount folder
  file: path=/home/chroot/{{ sftp_user }}/{{ bind_mount | default('sftp_upload', true) }} state=directory mode=0775 owner={{ sftp_user }}
  when: user_created|changed

- name: Bind mount the folder
  mount:
    src={{ real_mount }}
    name=/home/chroot/{{ sftp_user }}/{{ bind_mount }}
    state=mounted
    fstype=none
    opts=bind
  when:
    - not((real_mount is undefined) or (real_mount is none) or (real_mount|trim == ''))
    - user_created|changed

- name: Save password in a variable
  set_fact:
    pass_sftp: "{{ lookup('file', 'credentials/' + inventory_hostname + '/' + sftp_user + '/password.txt') }}"
  when: password_created|changed

- name: User Creation Results
  debug: msg="Password for {{ sftp_user }}@{{ inventory_hostname }} is {{ pass_sftp.split(' ')[0] }}"
  when: user_exist.stdout == "0"

- name: User already exists
  fail: msg="user {{ sftp_user }} already exists on the server, please use a different username and try again"
  when: user_exist.stdout == "1"

- name: Write a test file
  shell: su -s /bin/bash "{{ sftp_user }}" -c "touch /home/chroot/{{ sftp_user }}/{{ bind_mount | default('sftp_upload', true) }}/racktest.txt"
  failed_when: False
  register: check_write

- name: Remove the test file
  file:
    dest=/home/chroot/{{ sftp_user }}/{{ bind_mount }}/racktest.txt
    state=absent
    owner={{ sftp_user }}
  when: check_write|success

- name: Cannot write
  fail: msg="User {{ sftp_user }} cannot write to /home/chroot/{{ sftp_user }}/{{ bind_mount }}"
  when: check_write|failed
